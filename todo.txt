core
- child stages

core/resources
* metafiles, next to each file [RESEARCH]
* texture metafiles, storing size, filtering, format?
* resource paths
- hot reloading [RESEARCH]

core/graphics
* rewrite text rendering system to use pre-baked distance fields
* separate materials and material bindings
- optimise SpritePainter
- render graph [from old Halley]
- sliced sprites [RESEARCH]
- fix threaded load (TODOs in core_runner.cpp)

opengl
- instanced rendering?

input
- isolate SDL events to SDL-specific file?
- input context system [RESEARCH]

audio
* bring library into engine
* figure out which backend to use (OpenAL still?) [RESEARCH]

entity
* query other entities [RESEARCH]
* messaging system [RESEARCH]
- load prefabs
- staggered systems
- parallel systems
- better timelines
- Lua systems
- defragment/optimize memory? [RESEARCH]
- universal hierarchical transforms? [RESEARCH]
- onAddEntity/onRemoveEntity on systems

codegen
* components registry [RESEARCH]
* messages? [RESEARCH]
- system base classes [RESEARCH]
- import custom types in components [RESEARCH]
- codegen parallel systems
- codegen Lua

cli tools
* bitmap text generator
- packer
- atlas generator?

editor
- decide how this is going to work (overlay? separate tool? do we allow remote connection?) [RESEARCH]
- asset/prefab editor
- scene editor? [RESEARCH]
- animation editor
- system/component/message editor
- render graph editor
- state machine editor? [RESEARCH]

utils
- collision detection & triggers
- better HTTP library?

samples
- expand "test" sample
- make a minimal "template" sample

CMake
- lists for all libraries [RESEARCH]
- boost/SDL dependencies [RESEARCH]
- clean up

platforms
* Mac
- Linux
- PS4?
- XBox One?
- Android?
- iOS?

directx 11/12?
- future support?

vulkan?
- future support?

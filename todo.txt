core
- hot reloading
- child stages
- resource paths and filenames?

core/graphics (?)
* rewrite text rendering system to use pre-baked distance fields
* separate materials and material bindings
- optimise SpritePainter
- render graph [from old Halley]
- sliced sprites
- fix threaded load (TODOs in core_runner.cpp)

opengl
- ?

input
* bring library into engine

audio
* bring library into engine
* figure out which backend to use (OpenAL still?)

entity
* load from YAML files
* query other entities
* messaging system
- staggered systems
- parallel systems
- better timelines
- Lua systems
- Haskell systems
- defragment/optimize memory
- universal hierarchical transforms? :(
- onAddEntity/onRemoveEntity on systems

codegen
* registry
* messages?
- system base class
- figure out how to import custom types in components
- component initialization?
- switch to yaml-based format for component/system/message specs?
- rewrite in C++?
- codegen parallel systems
- codegen Lua
- codegen Haskell

tools/editor
- decide how this is going to work (overlay? separate tool? do we allow remote connection?)
- asset/prefab editor
- scene editor?
- animation editor
- system/component/message editor
- render graph editor
- state machine editor?

utils
- collision detection & triggers
- better HTTP library?

samples
- expand "test" sample
- make a minimal "template" sample

CMake
- lists for all libraries
- boost/SDL dependencies
- clean up

platforms
* Mac
- Linux
- Android?
- iOS?
- PS4?
- XBox One?

directx?
- future support?

vulkan?
- future support?

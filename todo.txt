core
* resources
* refactor graphics front-end
* figure out how to organize APIs
- hot reloading
- child stages

video
* bring library into engine
* painter
* materials
- decouple OpenGL back-end from the graphics front-end
- rewrite text rendering system to use pre-baked distance fields
- animation?
- fix threaded load (TODOs in core_runner.cpp)

input
* bring library into engine

audio
* bring library into engine

entity
* load from text files
* query other entities
- staggered systems
- parallel systems
- Lua systems
- Haskell systems
- defragment/optimize memory
- universal hierarchical transforms?

codegen
* single-entity systems
* registry
- codegen parallel systems
- codegen Lua
- codegen Haskell

tools
- asset/prefab editor
- scene editor?
- animation editor
- system/component editor

utils
- better HTTP library?

samples
* sort out the build system mess T_T
* make a minimal "template" sample

CMake
* x64 target by default
* sort files into neat filters
* precompiled headers

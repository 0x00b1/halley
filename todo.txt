core
- child stages

core/resources
- resources hot reloading [RESEARCH]
- asynchronous resource loading
- "library" of pre-processed assets from which the game loads data (like Unity)

core/graphics
- consider replacing text format with binary format? (current one is super slow)
- convert uniforms into attributes for distance_field_sprite?
- optimise SpritePainter
- render graph [from old Halley]
- sliced sprites [RESEARCH]
- run rendering on another thread?
- generalize Sprite for more attributes [RESEARCH]
- expand attributes into four vertices at Painter, instead of Renderer
- multi-pass conditional enabling of pass
- multi-pass disable batching
- fallback shaders
- shaders for other graphics APIs? [RESEARCH]

input
- isolate SDL events to SDL-specific file?
- input context system [RESEARCH]

audio
* bring library into engine
* figure out which backend to use (OpenAL still?) [RESEARCH]

entity
- query other entities? [RESEARCH]
- load prefabs
- smearing systems
- systems as parallel tasks [RESEARCH]
- better timelines?
- foreign language systems [RESEARCH]
- defragment/optimize memory? [RESEARCH]
- universal hierarchical transforms? [RESEARCH]
- onAddEntity/onRemoveEntity on systems [RESEARCH]
- store references to other components [RESEARCH]

codegen
- components registry [RESEARCH] (does this even make sense?)
- components serialization [RESEARCH]
- import custom types in components [RESEARCH]

lua
- codegen Lua
- Lua systems
- codegen component
- codegen system
- Moonscript support

cli tools
- assets bundler
- atlas generator?
- texture converter?

editor
- decide how this is going to work (overlay? separate tool? do we allow remote connection?) [RESEARCH]
- asset/prefab editor
- scene editor? [RESEARCH]
- animation editor
- system/component/message editor
- render graph editor
- state machine editor? [RESEARCH]

utils
* collision detection & triggers
- tasks/concurrency review
- consider replacing STL with EASTL or similar?
- fix Maybe<T>?
- improve Halley::String?
- better HTTP library/replace boost::asio?
- write my own memory pool/replace boost::pool?

samples
- make a minimal "template" sample
- ports from my old game jam games:
  - ggj16 ("Anu & Ki") - from Unity
  - ggj15 ("A Horrible Night") - from Unity
  - poh13 ("Dungeon Butler") - from Halley 1
  - ggj13 ("Stoneheart: The Beauty in the Beast") - from Halley 1
  - ggj12 ("Trapped: In the Chambers of Eternal Darkness") - from Halley 1
  - spjam11 ("Down Goes the Phoenix") - from Halley 1
  - ggj11 ("Planetary Plan C") - from Halley 1
  - sh09 ("Xtreme Programming - the Literal Game") - from Allegro
  - sh07 ("Fury of the Sky God") - from Allegro
  - sh05 ("Bunkermaster") - from Allegro

build
- figure out how to handle code generation and its errors
- clean up
- conan support?
- look into meson?

platforms
- PS4?
- XBox One?
- Android?
- iOS?

directx 11/12?
- future support?

vulkan?
- future support?
